[
{
	"uri": "/teaching/",
	"title": "Teaching Resources for All",
	"tags": [],
	"description": "",
	"content": "The Home page There will be an explanation here.. And change "
},
{
	"uri": "/teaching/lesson/python/",
	"title": "Computers and Code",
	"tags": [],
	"description": "",
	"content": "Lesson Overview A practical lesson as an introduction to learning Python. (One Hour) Objectives Understand what computers are for Understand how we can control computers Learn how to instruct a computer using Python &amp;ldquo;Hello World!!&amp;rdquo; (standard) Loops to output many times (intermediate) Strings and manipulation (advanced) ___ Outcomes All: will know that code tells a computer to do work and know what syntax is Most: will know how to write simple &amp;ldquo;Hello World&amp;rdquo; code in Python and save it to a file to reuse Some: will be able to fix errors in their code will add to their code and solve logical problems in the code Computers What is the purpose of a computer? In pairs, discuss and come up with an answer. [Two minutes] One person from each pair write the answers on whiteboard. The Answer All the answers lead to the right one Automation!! Computers do work we find boring, repetitious or difficult. Name the oldest computers. In pairs again [two minutes] One person from each pair write the answers on whiteboard. Older than you may think Neolithic standing stones - tens of thousands of years old. The abacus - thousands of years old. Computers have been around a long time!! Rock Neolithic standing stones helped prehistoric people to work out when to plant crops or go hunting. Wooden The abacus was an old computer used to make difficult trading calculations easier to remember and record. Code (or Software) How do we get computers to do work for us? Code!!! Prehistoric people coded in rocks! Ancient traders coded in wooden counters! Modern people code in text Coding Languages Code can be written in many languages These are called programming languages, or computer languages. How many programming languages can you name? Code Syntax Each programming language has a set of rules, called syntax. Syntax defines the structure, symbols, key words and terms used to create instruction sets, or programmes. Hello World! When we learn a new computer language we must learn its &amp;ldquo;syntax&amp;rdquo;. The first step in learning any language is to say hello. A programming language is the same It&amp;rsquo;s tradition to get the computer to say Hello World! Practical Today we are going to use Python Python is used a lot in - Science Statistics Medical research Information Technology Start your engines! Open Python IDLE (Python Commandline) Should look something like this: Python 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:53:40) [MSC v.1500 64 bit (AMD64)] on win32 Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information. &amp;gt;&amp;gt;&amp;gt; Type in some code Type in: &amp;gt;&amp;gt;&amp;gt; print &amp;quot;Hello World!&amp;quot; You should see the computer output: Hello World! Python is great Python is a very simple computer language Python is very efficient Python is very powerful You can do pretty much anything with Python. Save code in a file So, what do you do when you want to write something complicated and use it again? You save your work in a file - like you would writing a document in Word or a PPT. The format of a python file looks like this: #!/usr/bin/python def some_function(): print &amp;quot;Hello World!!&amp;quot; some_function() Open an editor Open an editor - Open Python IDLE (Python GUI) Add in the code Save the file Name the file HelloWorld.py Run your code Run the file by clicking Run Or hit F5 The output will be the same - Hello World!! Errors If you made a mistake, you may get an error&amp;hellip; What error did you get and how can you fix them? Look at the error, it will help Add an error - leave out a quote mark - and see what happens You may see an error for indentation &amp;gt;&amp;gt;&amp;gt; print &amp;quot;Hello World! File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1 print &amp;quot;Hello World! ^ SyntaxError: EOL while scanning string literal Indentation Python SYNTAX includes indentaton This is how the text of the code is laid out One instruction may have a sub-instruction The sub-instruction must be indented def some_function(): print &amp;quot;Hello World!!&amp;quot; ↑↑↑↑ indented four characters of whitespace Your indentation MUST be consistent, or Python will give you an error! Make the computer do the work Automation is our goal, let&amp;rsquo;s type less&amp;hellip; Task How about writing out &amp;ldquo;Hello World!!&amp;rdquo; 10 times? Loops You&amp;rsquo;ll need a loop for that! &amp;gt;&amp;gt;&amp;gt; for i in range(1,10): ... print &amp;quot;Hello World!!&amp;quot; Task (Hard) Print out &amp;ldquo;Hello World!!&amp;rdquo; for the number of characters in its string There are 13 characters in the String Each iteration (loop) remove a character so the last iteration is blank Looks like&amp;hellip; Hello World!! Hello World! Hello World Hello Worl Hello Wor Hello Wo Hello W Hello Hello Hell Hel He H String manipulation To do that you need to know a String is a list of characters. &amp;ldquo;Hello World!!&amp;rdquo; is a String made up of characters &amp;lsquo;H&amp;rsquo;, &amp;lsquo;e&amp;rsquo;, &amp;lsquo;l&amp;rsquo;, &amp;lsquo;l&amp;rsquo;, &amp;lsquo;o&amp;rsquo;, &amp;lsquo; &amp;lsquo;, &amp;lsquo;W&amp;rsquo;, &amp;lsquo;o&amp;rsquo;, &amp;lsquo;r&amp;rsquo;, &amp;lsquo;l&amp;rsquo;, &amp;rsquo;d&amp;rsquo;, &amp;lsquo;!&amp;rsquo;, &amp;lsquo;!&amp;rsquo; This is called a List in Python In other languages it is called an Array Create a List hello = list(&amp;quot;Hello World!!&amp;quot;) Challenge Prize If you can solve this you get a prize!! Logical Code fail Why does the following code not do what you think? You&amp;rsquo;d think it works, but it does not - why? hello = list(&amp;quot;Hello World!!&amp;quot;) for i in hello: if i != hello[0]: del hello[-1] print &#39;&#39;.join(hello) Solution hello = list(&amp;quot;Hello World!!&amp;quot;) strLth = len(hello) for i in range(0,strLth): if i != 0: del hello[-1] print &#39;&#39;.join(hello) Summary What are computers for? - Automation How do we control them? - Code (software) We learnt some Python, a simple, but powerful computer language We learnt how to control the computer to say &amp;ldquo;Hello World!&amp;rdquo; We learnt how to save our instructions (our code) to a file to use again We learnt about errors and logical problems Look up If you enjoyed Python and want to learn more, have a look at the these links: http://www.pythonforbeginners.com/basics https://www.codecademy.com/learn/python https://codefights.com Thanks! Notes on Github&amp;hellip; Lesson plan, examples and notes can be found at: https://avastmick.github.io/intro-computers-python/ "
},
{
	"uri": "/teaching/lesson/intro-to-programming/",
	"title": "intro to programming",
	"tags": [],
	"description": "",
	"content": "An intro to programming ## Lesson Overview A practical lesson as an introduction to learning Python. (One Hour) ___ ## Objectives - Understand what computers are for - Understand how we can control computers - Learn how to instruct a computer using **Python** + &#34;Hello World!!&#34; (standard) + Loops to output many times (intermediate) + Strings and manipulation (advanced) ___ ## Outcomes - **All:** + will know that code tells a computer to do work + and know what syntax is - **Most:** + will know how to write simple &#34;Hello World&#34; code in Python + and save it to a file to reuse - **Some:** + will be able to fix errors in their code + will add to their code and solve logical problems in the code --- # Computers ## What is the purpose of a computer? + In pairs, discuss and come up with an answer. + [Two minutes] + One person from each pair write the answers on whiteboard. ___ ## The Answer - All the answers lead to the right one + **Automation!!** + Computers do work we find boring, repetitious or difficult. function initSlides() { Reveal.initialize({ embedded : true, controls : &#34;true&#34;, center: true , history: &#34;true&#34; , progress: &#34;true&#34; , transition: &#34;concave&#34;, dependencies: [ { src: &#39;\/revealjs\/lib\/js\/classList.js&#34;&#39;, condition: function() { return !document.body.classList; } }, { src: &#39;\/revealjs\/plugin\/markdown\/marked.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } }, { src: &#39;\/revealjs\/plugin\/markdown\/markdown.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } }, { src: &#39;\/revealjs\/plugin\/highlight\/highlight.js&#39;, async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: &#39;\/revealjs\/plugin\/zoom-js\/zoom.js&#39;, async: true, condition: function() { return !!document.body.classList; } }, { src: &#39;\/revealjs\/plugin\/notes\/notes.js&#39;, async: true, condition: function() { return !!document.body.classList; } } ] }); } See it fullscreen var toto = document.getElementById(&#39;slideContent&#39;).innerHTML document.getElementById(&#39;slideFrame&#39;).contentWindow.document.write(document.getElementById(&#39;slideContent&#39;).innerHTML); document.getElementById(&#39;slideContent&#39;).remove(); document.addEventListener(&#34;DOMContentLoaded&#34;,function(){ setTimeout(function () { document.getElementById(&#39;slideFrame&#39;).contentWindow.initSlides() ; }, 2000); }); function slideFullScreen() { document.open(); document.write(toto); document.close(); initSlides() } "
},
{
	"uri": "/teaching/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/teaching/lesson/",
	"title": "Lessons",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/teaching/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]